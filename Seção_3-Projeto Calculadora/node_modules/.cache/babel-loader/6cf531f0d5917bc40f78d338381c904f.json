{"ast":null,"code":"var _jsxFileName = \"/home/adriano/Documentos/CURSO_REACT/Se\\xE7\\xE3o_3-Projeto Calculadora/src/main/Calculator.jsx\";\nimport React, { Component } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\nexport default class Caculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState\n    });\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      const values = [...this.state.values];\n\n      try {\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n\n      values[1] = 0;\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n\n    console.log(operation);\n  }\n\n  addDigit(n) {\n    //se o usuario pressionar o ponto, ja existindo um ponto -- validação\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    } //limpa o display caso o estado atual seja apenas 0, ou se o estado de clearDisplay for True\n\n\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay; //\n\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({\n      displayValue,\n      clearDisplay: false\n    });\n\n    if (n !== '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({\n        values\n      });\n    }\n  }\n\n  render() {\n    const addDigit = n => this.addDigit(n);\n\n    const setOperation = op => this.setOperation(op);\n\n    return React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Display, {\n      value: this.state.displayValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"AC\",\n      click: () => this.clearMemory(),\n      triple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"/\",\n      click: setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"7\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"8\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"9\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"*\",\n      click: setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"4\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"5\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"6\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"-\",\n      click: setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"1\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"2\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"3\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"+\",\n      click: setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"0\",\n      click: addDigit,\n      double: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \".\",\n      click: addDigit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"=\",\n      click: setOperation,\n      operation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/adriano/Documentos/CURSO_REACT/Seção_3-Projeto Calculadora/src/main/Calculator.jsx"],"names":["React","Component","Button","Display","initialState","displayValue","clearDisplay","operation","values","current","Caculator","state","clearMemory","setState","setOperation","equals","currentOperation","eval","e","console","log","addDigit","n","includes","currentValue","i","newValue","parseFloat","render","op"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Calculator.css'\nimport Button from '../components/Button'\nimport Display from '../components/Display'\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0,0],\n    current: 0\n}\n\n\n\nexport default class Caculator extends Component{\n    \n    state = { ...initialState}\n\n    clearMemory(){\n        this.setState({...initialState})\n    }\n    setOperation(operation){\n        if(this.state.current === 0){\n            this.setState({operation,current:1,clearDisplay: true})\n        }else{\n            const equals = operation === '='\n            const currentOperation = this.state.operation\n\n            const values = [...this.state.values]\n\n            try{\n                values[0]=eval(`${values[0]} ${currentOperation} ${values[1]}`)\n            }catch(e){\n                values[0] = this.state.values[0]\n            }\n\n            values[1] = 0\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: !equals,\n                values\n            })\n        }\n        console.log(operation)\n    }\n    addDigit(n){\n        //se o usuario pressionar o ponto, ja existindo um ponto -- validação\n        if(n==='.'&&this.state.displayValue.includes('.')){\n            return \n        }\n\n        //limpa o display caso o estado atual seja apenas 0, ou se o estado de clearDisplay for True\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\n\n        //\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n        const displayValue = currentValue + n\n        this.setState({displayValue,clearDisplay: false})\n\n        if (n!=='.'){\n            const i = this.state.current\n            const newValue = parseFloat(displayValue)\n            const values = [...this.state.values]\n            values[i] = newValue\n            this.setState({values})\n        }\n\n\n\n    }\n\n    render(){\n        const addDigit = n => this.addDigit(n)\n        const setOperation = op => this.setOperation(op)\n        return(\n            <div className = \"calculator\">\n                <Display value={this.state.displayValue}/>               \n                <Button label=\"AC\" click={()=>this.clearMemory()} triple/>\n                <Button label=\"/\" click={setOperation} operation/> \n                <Button label=\"7\" click={addDigit}/> \n                <Button label=\"8\" click={addDigit}/>\n                <Button label=\"9\" click={addDigit}/>\n                <Button label=\"*\" click={setOperation} operation/> \n                <Button label=\"4\" click={addDigit}/> \n                <Button label=\"5\" click={addDigit}/> \n                <Button label=\"6\" click={addDigit}/>\n                <Button label=\"-\" click={setOperation} operation/> \n                <Button label=\"1\" click={addDigit}/> \n                <Button label=\"2\" click={addDigit}/>\n                <Button label=\"3\" click={addDigit}/>\n                <Button label=\"+\" click={setOperation} operation/> \n                <Button label=\"0\" click={addDigit} double/> \n                <Button label=\".\" click={addDigit}/>\n                <Button label=\"=\" click={setOperation} operation/>  \n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}